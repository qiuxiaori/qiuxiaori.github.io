{"title":"Git的使用","date":"2020-07-20T07:05:18.546Z","date_formatted":{"ll":"Jul 20, 2020","L":"07/20/2020","MM-DD":"07-20"},"link":"2020/07/20/Git的使用","tags":["教程"],"categories":["编程技术"],"updated":"2020-07-20T07:05:18.547Z","content":"<blockquote>\n<p>git 是一个分散式版本管理工具，最初由林纳斯·托瓦兹创作，于 2005 年以 GPL 发布。最初目的是为更好地管理 Linux 内核开发而设计。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"一.安装-git\">一.安装 Git<a title=\"#一.安装-git\" href=\"#一.安装-git\"></a></h3>\n<p>官网下载 git mac 安装包，按照提示安装,终端中输入 git 出现如图提示信息即为安装成功。</p>\n<h3 id=\"二.注册账号\">二.注册账号<a title=\"#二.注册账号\" href=\"#二.注册账号\"></a></h3>\n<p>如果没有 github 账号到官网<a href=\"https://github.com/\" target=\"_blank\">https://github.com/</a>上注册账号并通过邮箱验证。</p>\n<h3 id=\"三.添加-ssh-密匙\">三.添加 SSH 密匙<a title=\"#三.添加-ssh-密匙\" href=\"#三.添加-ssh-密匙\"></a></h3>\n<ol>\n<li>获取 ssh key</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;设置用户名和电子邮箱</span><br><span class=\"line\">git config --global user.name &quot;xxxxx&quot;</span><br><span class=\"line\">git config --global user.email &quot;xxxxx@qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;通过终端命令创建ssh密钥</span><br><span class=\"line\">ssh-keygen -t rsa -C &quot;xxxxx@qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;回车后显示，默认回车即可</span><br><span class=\"line\">Last login: Sat Jan  6 14:12:16 on ttys000</span><br><span class=\"line\">WMBdeMacBook-Pro:~ WENBO$ ssh-keygen -t rsa -C &quot;1050794513@qq.com&quot;</span><br><span class=\"line\">Generating public&#x2F;private rsa key pair.</span><br><span class=\"line\">Enter file in which to save the key (&#x2F;Users&#x2F;WENBO&#x2F;.ssh&#x2F;id_rsa):</span><br><span class=\"line\">&#x2F;Users&#x2F;WENBO&#x2F;.ssh&#x2F;id_rsa already exists.</span><br><span class=\"line\">Overwrite (y&#x2F;n)? n</span><br><span class=\"line\">WMBdeMacBook-Pro:~ WENBO$</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;生成ssh key后在用户目录下打开.ssh文件夹，id_rsa.pub文件中的内容就是我们要的ssh key</span><br><span class=\"line\">&#x2F;&#x2F;如果在目录中看不到.ssh文件夹，可以通过命令行操作文件</span><br><span class=\"line\">open .ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在设置中添加得到的 SSH 密匙，如图。</li>\n</ol>\n<h3 id=\"四.创建远程仓库\">四.创建远程仓库<a title=\"#四.创建远程仓库\" href=\"#四.创建远程仓库\"></a></h3>\n<p>点击右上角加号新建仓库</p>\n<h3 id=\"五.创建本地仓库\">五.创建本地仓库<a title=\"#五.创建本地仓库\" href=\"#五.创建本地仓库\"></a></h3>\n<p>5.1 初始化仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;cd到项目所在目录</span><br><span class=\"line\">&#x2F;&#x2F;把项目目录初始化为一个可管理的git仓库</span><br><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<p>5.2 添加要管理的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add example.txt</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;通过add . 命令可以添加目录中所有文件</span><br><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<p>5.3 提交添加的文件到版本库中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;对本次提交做的描述，必选&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"六.-本地仓库内容推送到远程仓库\">六. 本地仓库内容推送到远程仓库<a title=\"#六.-本地仓库内容推送到远程仓库\" href=\"#六.-本地仓库内容推送到远程仓库\"></a></h3>\n<p>6.1  ​​ 把本地仓库关联到远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;在终端输入（依然是项目目录）,后边是你的远程仓库的git地址</span><br><span class=\"line\">&#x2F;&#x2F;origin相当于对远程仓库的称呼</span><br><span class=\"line\">git remote add origin git@github.com:zmyCris&#x2F;fisdhad-f.git</span><br></pre></td></tr></table></figure>\n<p>6.2 推送</p>\n<p>使用 push 命令推送<br>\n  由于远程库是空的，我们第一次推送 master 分支时，加上了-u 参数，Git 不但会把本地的 master 分支内容推送的远程新的 master 分支，还会把本地的 master 分支和远程的 master 分支关联起来，在以后的推送或者拉取时就可以简化命令，不用加上-u 参数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<h3 id=\"七.回滚\">七.回滚<a title=\"#七.回滚\" href=\"#七.回滚\"></a></h3>\n<p>当我们想要撤销提交回滚到之前的某次提交时就要用到 reset 命令了，reset 命令能够把仓库回滚到指定的某次提交时的状态，也就是说我们如果要撤销 a 提交，就要选择它的前一次提交。</p>\n<ol>\n<li>查看提交的 id<br>\n使用下面的命令查看 git 仓库日志，拿到 commit 后边的 id，就是我们等会要操作的对象。```<br>\ngit log<br>\n// ctrl+z 退出日志模式</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![gitlog](&#x2F;images&#x2F;git01.jpeg)</span><br><span class=\"line\"></span><br><span class=\"line\">2. 回滚提交</span><br><span class=\"line\">* 回滚提交并将修改置为已commit</span><br><span class=\"line\">&#96;git reset --soft [c89936abefaf3a23a0ffc541f75db00f19cd6e8b]&#96;</span><br><span class=\"line\"></span><br><span class=\"line\">* 回滚提交将修改置为未commit</span><br><span class=\"line\">&#96;git reset --mixed [c89936abefaf3a23a0ffc541f75db00f19cd6e8b]&#96;</span><br><span class=\"line\"></span><br><span class=\"line\">* 回滚并删除修改的内容，谨慎操作</span><br><span class=\"line\">&#96;git reset --hard [c89936abefaf3a23a0ffc541f75db00f19cd6e8b]&#96;</span><br><span class=\"line\"></span><br><span class=\"line\">3. 同步远程仓库</span><br><span class=\"line\">本地回滚后远程仓库还是回滚前的状态，这时我们执行以下命令要强制远程仓库同步本地仓库。</span><br><span class=\"line\">&#96;git push -f [name]&#96;</span><br><span class=\"line\"></span><br><span class=\"line\">### 八.删除分支</span><br><span class=\"line\">分支的删除分为删除本地分支和删除远程分支</span><br><span class=\"line\">1. 删除本地分支</span><br><span class=\"line\">&#96;git branch -D [name]&#96;</span><br><span class=\"line\">2. 删除远程分支</span><br><span class=\"line\">&#96;git push origin --delete [name]&#96;</span><br><span class=\"line\"></span><br><span class=\"line\">### 九.合并分支</span><br><span class=\"line\">假如我们在master分支外创建了一个dev分支，工作完成后想要把dev分支的内容同步到master分支，就要用到merge命令。&#96;&#96;&#96;js</span><br><span class=\"line\">&#x2F;&#x2F; 切换到master分支</span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">&#x2F;&#x2F; 合并dev分支</span><br><span class=\"line\">git merge dev</span><br></pre></td></tr></table></figure>\n","prev":{"title":"Docker实战","link":"2020/07/20/Docker实战"},"next":{"title":"ESLint使用简介","link":"2020/07/20/Eslint的使用"},"plink":"http://qiuxiaori.github.com/2020/07/20/Git的使用/","toc":[{"id":"一.安装-git","title":"一.安装 Git","index":"1"},{"id":"二.注册账号","title":"二.注册账号","index":"2"},{"id":"三.添加-ssh-密匙","title":"三.添加 SSH 密匙","index":"3"},{"id":"四.创建远程仓库","title":"四.创建远程仓库","index":"4"},{"id":"五.创建本地仓库","title":"五.创建本地仓库","index":"5"},{"id":"六.-本地仓库内容推送到远程仓库","title":"六. 本地仓库内容推送到远程仓库","index":"6"},{"id":"七.回滚","title":"七.回滚","index":"7"}],"copyright":{"author":"Qiu Xiaori","license":"自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0)","link":"<a href=\"http://qiuxiaori.github.com/2020/07/20/Git的使用/\" title=\"Git的使用\">http://qiuxiaori.github.com/2020/07/20/Git的使用/</a>"}}