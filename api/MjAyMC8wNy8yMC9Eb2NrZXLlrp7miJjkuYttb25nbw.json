{"title":"Docker实战之mongo","date":"2020-07-20T07:05:18.546Z","date_formatted":{"ll":"Jul 20, 2020","L":"07/20/2020","MM-DD":"07-20"},"link":"2020/07/20/Docker实战之mongo","tags":["docker"],"categories":["编程技术"],"updated":"2020-07-20T07:05:18.546Z","content":"<blockquote>\n<p>使用 docker 运行 mongo，可以省去安装 mongo 数据库的步骤， docker也提供有mongo的镜像，不过还是有许多要配置的地方。</p>\n</blockquote>\n<h3 id=\"拉取镜像\">拉取镜像<a title=\"#拉取镜像\" href=\"#拉取镜像\"></a></h3>\n<ul>\n<li>搜索查看镜像：<code>docker search mongo</code> 基本上第一个就是了</li>\n<li>拉取镜像：<code>docker pull mongo</code></li>\n</ul>\n<h3 id=\"运行容器\">运行容器<a title=\"#运行容器\" href=\"#运行容器\"></a></h3>\n<ul>\n<li>普通模式运行：\n<ul>\n<li>执行 <code>docker run --name &lt;YOUR-NAME&gt; -p 27017:27017 -v /data/db:/data/db -d mongo:3.4</code></li>\n<li>普通模式启动 mongo 容器后就可以直接连接 mongodb://127.0.0.1:27017/dbname 操作数据库了</li>\n</ul>\n</li>\n<li>auth模式运行：\n<ul>\n<li><code>docker run --name &lt;YOUR-NAME&gt; -p 27017:27017 -v /data/db:/data/db -d mongo:3.4 -auth</code></li>\n<li>管理员模式启动后需要添加用户管理员已经数据库管理员才能操作，详见第三四章节</li>\n</ul>\n</li>\n<li>参数说明\n<ul>\n<li>—name： 指定库的名字，如果不指定会使用一串随机字符串</li>\n<li>-p 27017:27017： 官方的镜像已经暴露了 27017 端口，我们将它映射到主机的端口上。如果你不使用默认端口，将 : 前面的数字改成自定义端口</li>\n<li>-v /data/db:/data/db： 冒号前面的是主机上的文件路径，将它挂载到库中的文件夹下，实际对文件的读写就会在主机文件上操作</li>\n<li>-d： 在后台运行</li>\n<li>mongo:3.4 指定镜像版本，默认是 latest 。建议总是自己指定版本</li>\n<li>—auth 以 auth 模式运行 mongo</li>\n</ul>\n</li>\n<li>执行一下 <code>docker ps</code> 确认 mongo 已经运行起来</li>\n</ul>\n<h3 id=\"添加用户管理员\">添加用户管理员<a title=\"#添加用户管理员\" href=\"#添加用户管理员\"></a></h3>\n<blockquote>\n<p>auth模式运行的数据库先需要添加一个管理用户的用户管理员</p>\n</blockquote>\n<ul>\n<li>执行 <code>docker exec -it &lt;YOUR-NAME&gt; mongo admin</code> 进入到 shell 中</li>\n<li>添加管理员 <code>db.createUser({ user: 'username', pwd: 'password', roles: [ { role: 'userAdminAnyDatabase', db: 'admin' } ]})</code></li>\n<li>之后用管理员身份登录可以：\n<ul>\n<li>方式一： <code>docker exec -it &lt;YOUR-NAME&gt; mongo -u &lt;USER&gt; -p &lt;PASSWORD&gt; --authenticationDatabase admin</code></li>\n<li>方式二：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it &lt;YOUR-NAME&gt; <span class=\"regexp\">/bin/</span>bash <span class=\"comment\">// 进入到 shell</span></span><br><span class=\"line\">use admin <span class=\"comment\">// 使用 admin 数据库</span></span><br><span class=\"line\">db.auth(username, password) <span class=\"comment\">// 登入</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"数据库权限\">数据库权限<a title=\"#数据库权限\" href=\"#数据库权限\"></a></h3>\n<blockquote>\n<p>刚刚添加的管理员只是mongo数据库中用来管理其他用户的管理员，如果相对数据进行操作，需要创建数据库管理员</p>\n</blockquote>\n<ul>\n<li>以用户管理员登入 shell</li>\n<li>切换到要添加管理的数据库：<code>use &lt;DbName&gt;</code></li>\n<li>新建：<code>db.createUser({ user: 'username', pwd: 'password', roles: [ { role: 'root', db: &lt;DbName&gt; }, { role: 'readWrite', db: &lt;DbName&gt; } ]})</code></li>\n<li>以这个账户连接 mongo 就具有读写权限了</li>\n</ul>\n<h3 id=\"参考文章\">参考文章<a title=\"#参考文章\" href=\"#参考文章\"></a></h3>\n<ol>\n<li><a href=\"ttps://brickyang.github.io/2017/03/15/%E5%88%A9%E7%94%A8-Docker-%E8%BF%90%E8%A1%8C-MongoDB/\" target=\"_blank\">利用 Docker 运行 MongoDB</a></li>\n<li><a href=\"https://blog.csdn.net/kk185800961/article/details/45619863\" target=\"_blank\">MongoDB 基础(六)安全性(权限操作)</a></li>\n</ol>\n<blockquote>\n<p><a href=\"https://qiuxiaori.github.io/xr-blog/\" target=\"_blank\">原文博客地址</a></p>\n</blockquote>\n","prev":{"title":"egg-core源码分析","link":"2020/07/20/egg-core源码分析"},"next":{"title":"FFmpeg插件的使用","link":"2020/07/20/FFmpeg插件的使用"},"plink":"http://qiuxiaori.github.com/2020/07/20/Docker实战之mongo/","toc":[{"id":"拉取镜像","title":"拉取镜像","index":"1"},{"id":"运行容器","title":"运行容器","index":"2"},{"id":"添加用户管理员","title":"添加用户管理员","index":"3"},{"id":"数据库权限","title":"数据库权限","index":"4"},{"id":"参考文章","title":"参考文章","index":"5"}],"copyright":{"author":"Qiu Xiaori","license":"自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0)","link":"<a href=\"http://qiuxiaori.github.com/2020/07/20/Docker实战之mongo/\" title=\"Docker实战之mongo\">http://qiuxiaori.github.com/2020/07/20/Docker实战之mongo/</a>"}}